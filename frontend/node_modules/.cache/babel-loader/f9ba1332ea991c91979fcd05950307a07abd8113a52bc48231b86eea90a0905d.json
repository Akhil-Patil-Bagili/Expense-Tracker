{"ast":null,"code":"var _jsxFileName = \"/Users/akhilpatilbagili/Documents/Bootcamp/Expense_Tracker/frontend/src/Components/RotatingText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Styles/App.css\";\n\n// Static array of rotating texts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROTATING_TEXTS = [\"on Trips.\", \"with Friends.\", \"with Roomates.\", \"with your Partner.\", \"with Anyone.\"];\nfunction RotatingText() {\n  _s();\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    // Rotate text every 2 seconds\n    const timer = setInterval(() => {\n      setCounter(currentCounter => (currentCounter + 1) % ROTATING_TEXTS.length);\n    }, 2000);\n\n    // Clear interval on component unmount\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"changeText\",\n    children: ROTATING_TEXTS[counter]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_s(RotatingText, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n_c = RotatingText;\nexport default RotatingText;\nvar _c;\n$RefreshReg$(_c, \"RotatingText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ROTATING_TEXTS","RotatingText","_s","counter","setCounter","timer","setInterval","currentCounter","length","clearInterval","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akhilpatilbagili/Documents/Bootcamp/Expense_Tracker/frontend/src/Components/RotatingText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Styles/App.css\";\n\n// Static array of rotating texts\nconst ROTATING_TEXTS = [\n  \"on Trips.\",\n  \"with Friends.\",\n  \"with Roomates.\",\n  \"with your Partner.\",\n  \"with Anyone.\",\n];\n\nfunction RotatingText() {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    // Rotate text every 2 seconds\n    const timer = setInterval(() => {\n      setCounter((currentCounter) => (currentCounter + 1) % ROTATING_TEXTS.length);\n    }, 2000);\n\n    // Clear interval on component unmount\n    return () => clearInterval(timer);\n  }, []);\n\n  return <div id=\"changeText\">{ROTATING_TEXTS[counter]}</div>;\n}\n\nexport default RotatingText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG,CACrB,WAAW,EACX,eAAe,EACf,gBAAgB,EAChB,oBAAoB,EACpB,cAAc,CACf;AAED,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,UAAU,CAAEG,cAAc,IAAK,CAACA,cAAc,GAAG,CAAC,IAAIP,cAAc,CAACQ,MAAM,CAAC;IAC9E,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAON,OAAA;IAAKW,EAAE,EAAC,YAAY;IAAAC,QAAA,EAAEX,cAAc,CAACG,OAAO;EAAC;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7D;AAACb,EAAA,CAdQD,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAgBrB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}